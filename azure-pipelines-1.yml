# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java 

trigger:
- main

stages:
# Stage 1: Build
- stage: Build
  displayName: 'Build Stage'
  pool: 'azure-first project'  # Specify your pool here
  jobs:
    - job: Build
      displayName: 'Build Job'
      steps:
      - task: Maven@4
        inputs:
          mavenPomFile: '/myagent/_work/4/s/my-app/pom.xml'
          goals: 'clean install'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
        displayName: 'Maven Build'

# Stage 2: Test
- stage: Test
  displayName: 'Test Stage'
  dependsOn: Build  # This stage depends on the Build stage
  pool: 'Default'   # Different agent pool
  jobs:
    - job: UnitTests
      displayName: 'Run Unit Tests'
      steps:
      - task: Maven@4
        inputs:
          mavenPomFile: '/myagent/_work/1/s/my-app/pom.xml'
          goals: 'test'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
        displayName: 'Maven Unit Tests'

# Stage 3: Deploy
- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build  # Run deploy only if the build succeeds
  pool: 'azure-first project'
  jobs:
    - job: Deploy
      displayName: 'Deploy Job'
      steps:
      - script: |
          echo "Searching for JAR files..."
          find $(System.DefaultWorkingDirectory) -name "*.jar"
        displayName: 'Find JAR Files'

      - task: Maven@4
        inputs:
          mavenPomFile: '/myagent/_work/4/s/my-app/pom.xml'
          goals: 'deploy'
        displayName: 'Maven Deploy'
